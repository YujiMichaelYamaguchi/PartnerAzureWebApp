@page
@model MichaelAzureWebApp.Pages.TestBotPageModel
@{
    ViewData["Title"] = "TestBotPage";
}

<!DOCTYPE html>
<HTML>
<HEAD>
    <TITLE>You are welcom to Michael Translation Bot </TITLE>
    <script crossorigin="anonymous" src="https://cdn.botframework.com/botframework-webchat/latest/webchat.js"></script>
    <style>
        #webchat {
            height: 100%;
            min-height: 375px;
            width: 1100px;
            min-width: 900px;
            background: gray;
            box-sizing: border-box;
        }
    </style>
</HEAD>
<BODY class="bgpattern-ringi">
    <div align="center" valign="center">
        <table border="1" bgcolor="#FFFFFF">
            <tbody>
                <tr>
                    <td align="center">
                        <font size="6" face="Monotype Corsiva" color="#CC6600">Michael Japanese Translation Bot</font>
                    </td>
                </tr>
                <tr>
                    <td align="center">
                        <form name="form1">
                            <font size="3" face="sans-serif" color="#CC6600">Please select your language</font>
                            <select id="locale" onchange="form1.submit()">
                                <option value="en-US">英語</option>
                                <option value="zh-CN">中国語</option>
                                <option value="ko-KR">韓国語</option>
                                <option value="fr-FR">フランス語</option>
                                <option value="de-DE">ドイツ語</option>
                                <option value="es-ES">スペイン語</option>
                            </select>s
                            <input id="botToken" type="hidden" name="botToken" ap-for="botToken" />
                            <input id="authorizationToken" type="hidden" name="authorizationToken" asp-for="authorizationToken" />
                            <input id="region" type="hidden" name="region" asp-for="region" />
                        </form>
                    </td>
                </tr>
                <tr>
                    <td>
                        <div id="webchat"></div>
                    </td>
                </tr>
            </tbody>
        </table>
    </div>
    <script>
        (async function () {

            const styleOptions = {
                botAvatarImage:
                    'https://adminfestcrewstorage.blob.core.windows.net/thumbnails/Michael.jpg',
                botAvatarInitials: 'MJ',
                userAvatarImage:
                    'https://adminfestcrewstorage.blob.core.windows.net/thumbnails/person2.png',
                userAvatarInitials: 'WC'
            };
            const store = window.WebChat.createStore({}, ({ dispatch }) => next => action => {
                if (action.type === 'DIRECT_LINE/CONNECT_FULFILLED') {
                    dispatch({
                        type: 'WEB_CHAT/SEND_EVENT',
                        payload: {
                            name: 'webchat/join',
                            value: { language: window.navigator.language }
                        }
                    });
                }
                return next(action);
            });

            
            // Pass a Web Speech ponyfill factory to renderWebChat.
            // You can also use your own speech engine given it is compliant to W3C Web Speech API: https://w3c.github.io/speech-api/.
            // For implementor, look at createBrowserWebSpeechPonyfill.js for details.
            window.WebChat.renderWebChat(
                {
                    directLine: window.WebChat.createDirectLine({ secret: document.getElementById('botToken').value }),
                    locale: document.getElementById('locale').value,
                    selectVoice: (voices, activity) =>
                        voices.find(({ name }) => /HarukaRUS/iu.test(name)) ||
                        voices.find(({ name }) => /Ichiro-Apollo/iu.test(name)) ||
                        voices.find(({ name }) => /Ayumi-Apollo/iu.test(name)),
                    webSpeechPonyfillFactory: await createCognitiveServicesSpeechServicesPonyfillFactory({
                        credentials: {
                            region: document.getElementById('region').value,
                            authorizationToken: document.getElementById('authorizationToken').value
                        }
                    }),
                    styleOptions,
                    store
                },
                document.getElementById('webchat')
            );

            document.querySelector('#webchat > *').focus();
        })().catch(err => console.error(err));
    </script>
</BODY>
</HTML>

